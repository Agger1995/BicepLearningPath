{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.613.9944",
      "templateHash": "11900629741301331114"
    }
  },
  "parameters": {
    "locations": {
      "type": "array",
      "defaultValue": [
        "westeurope",
        "northeurope",
        "eastus2"
      ],
      "metadata": {
        "description": "The Azure regions into which the resources should be deployed."
      }
    },
    "sqlServerAdministratorLogin": {
      "type": "secureString",
      "metadata": {
        "description": "The administrator login username for the SQL server."
      }
    },
    "sqlServerAdministratorPassword": {
      "type": "secureString",
      "metadata": {
        "description": "The administrator login password for the SQL server."
      }
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "10.10.0.0/16",
      "metadata": {
        "description": "The IP address range for all virtual networks to use."
      }
    },
    "subnets": {
      "type": "array",
      "defaultValue": [
        {
          "name": "frontend",
          "ipAddressRange": "10.10.5.0/24"
        },
        {
          "name": "backend",
          "ipAddressRange": "10.10.10.0/24"
        }
      ]
    }
  },
  "functions": [],
  "variables": {
    "copy": [
      {
        "name": "subnetProperties",
        "count": "[length(parameters('subnets'))]",
        "input": {
          "name": "[parameters('subnets')[copyIndex('subnetProperties')].name]",
          "properties": {
            "addressPrefix": "[parameters('subnets')[copyIndex('subnetProperties')].ipAddressRange]"
          }
        }
      }
    ]
  },
  "resources": [
    {
      "copy": {
        "name": "virtualNetworks",
        "count": "[length(parameters('locations'))]"
      },
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[format('teddybear-{0}', parameters('locations')[copyIndex()])]",
      "location": "[parameters('locations')[copyIndex()]]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetworkAddressPrefix')]"
          ]
        },
        "subnets": "[variables('subnetProperties')]"
      }
    },
    {
      "copy": {
        "name": "databases",
        "count": "[length(parameters('locations'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('database-{0}', parameters('locations')[copyIndex()])]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('locations')[copyIndex()]]"
          },
          "sqlServerAdministratorLogin": {
            "value": "[parameters('sqlServerAdministratorLogin')]"
          },
          "sqlServerAdministratorLoginPassword": {
            "value": "[parameters('sqlServerAdministratorPassword')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "11258799837732738833"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "The Azure region into which the resources should be deployed."
              }
            },
            "environmentName": {
              "type": "string",
              "defaultValue": "Development",
              "allowedValues": [
                "Development",
                "Production"
              ],
              "metadata": {
                "description": "The name of the environment. This must be Development or Production."
              }
            },
            "auditStorageAccountSkuName": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "metadata": {
                "description": "The name of the audit storage account SKU."
              }
            },
            "sqlServerAdministratorLogin": {
              "type": "secureString",
              "metadata": {
                "description": "The administrator login username for the SQL server."
              }
            },
            "sqlServerAdministratorLoginPassword": {
              "type": "secureString",
              "metadata": {
                "description": "The administrator login password for the SQL server."
              }
            },
            "sqlDatabaseSku": {
              "type": "object",
              "defaultValue": {
                "name": "Standard",
                "tier": "Standard"
              },
              "metadata": {
                "description": "The name and tier of the SQL database SKU."
              }
            }
          },
          "functions": [],
          "variables": {
            "sqlServerName": "[format('teddy{0}{1}', parameters('location'), uniqueString(resourceGroup().id))]",
            "sqlDatabaseName": "TeddyBear",
            "auditingenabled": "[equals(parameters('environmentName'), 'Production')]",
            "auditStorageAccountName": "[take(format('bearaudit{0}{1}', parameters('location'), uniqueString(resourceGroup().id)), 24)]"
          },
          "resources": [
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2020-11-01-preview",
              "name": "[variables('sqlServerName')]",
              "location": "[parameters('location')]",
              "properties": {
                "administratorLogin": "[parameters('sqlServerAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('sqlServerAdministratorLoginPassword')]"
              }
            },
            {
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2020-11-01-preview",
              "name": "[format('{0}/{1}', variables('sqlServerName'), variables('sqlDatabaseName'))]",
              "location": "[parameters('location')]",
              "sku": "[parameters('sqlDatabaseSku')]",
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
              ]
            },
            {
              "condition": "[variables('auditingenabled')]",
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-02-01",
              "name": "[variables('auditStorageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('auditStorageAccountSkuName')]"
              },
              "kind": "StorageV2"
            },
            {
              "condition": "[variables('auditingenabled')]",
              "type": "Microsoft.Sql/servers/auditingSettings",
              "apiVersion": "2020-11-01-preview",
              "name": "[format('{0}/{1}', variables('sqlServerName'), 'default')]",
              "properties": {
                "state": "Enabled",
                "storageEndpoint": "[if(equals(parameters('environmentName'), 'Production'), reference(resourceId('Microsoft.Storage/storageAccounts', variables('auditStorageAccountName'))).primaryEndpoints.blob, '')]",
                "storageAccountAccessKey": "[if(equals(parameters('environmentName'), 'Production'), listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('auditStorageAccountName')), '2021-02-01').keys[0].value, '')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('auditStorageAccountName'))]",
                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
              ]
            }
          ],
          "outputs": {
            "serverName": {
              "type": "string",
              "value": "[variables('sqlServerName')]"
            },
            "location": {
              "type": "string",
              "value": "[parameters('location')]"
            },
            "serverFullyQualifiedDomainname": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Sql/servers', variables('sqlServerName'))).fullyQualifiedDomainName]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "serverInfo": {
      "type": "array",
      "copy": {
        "count": "[length(range(0, length(parameters('locations'))))]",
        "input": {
          "name": "[reference(resourceId('Microsoft.Resources/deployments', format('database-{0}', parameters('locations')[range(0, length(parameters('locations')))[copyIndex()]])), '2019-10-01').outputs.serverName.value]",
          "location": "[reference(resourceId('Microsoft.Resources/deployments', format('database-{0}', parameters('locations')[range(0, length(parameters('locations')))[copyIndex()]])), '2019-10-01').outputs.location.value]",
          "fullyQualifiedDomainName": "[reference(resourceId('Microsoft.Resources/deployments', format('database-{0}', parameters('locations')[range(0, length(parameters('locations')))[copyIndex()]])), '2019-10-01').outputs.serverFullyQualifiedDomainname.value]"
        }
      }
    }
  }
}