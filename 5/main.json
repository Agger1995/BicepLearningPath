{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.613.9944",
      "templateHash": "10550064419365985286"
    }
  },
  "parameters": {
    "cosmosDBAccountName": {
      "type": "string",
      "defaultValue": "[format('toyrnd-{0}', uniqueString(resourceGroup().id))]"
    },
    "cosmosDBDatabaseThroughput": {
      "type": "int",
      "defaultValue": 400
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "storageAccountName": {
      "type": "string"
    }
  },
  "functions": [],
  "variables": {
    "cosmosDBDatabaseName": "FlightTests",
    "cosmosDBContainerName": "FlightTests",
    "cosmosDBContainerPartitionKey": "/droneId",
    "logAnalyticsWorkspaceName": "ToyLogs",
    "cosmosDBAccountDiagnosticSettingsName": "route-logs-to-log-analytics",
    "storageAccountBlobDiagnosticSettingsName": "routelogs-to-log-analytics"
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-04-01",
      "name": "[format('{0}/{1}/{2}', parameters('cosmosDBAccountName'), variables('cosmosDBDatabaseName'), variables('cosmosDBContainerName'))]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosDBContainerName')]",
          "partitionKey": {
            "kind": "Hash",
            "paths": [
              "[variables('cosmosDBContainerPartitionKey')]"
            ]
          }
        },
        "options": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDBAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDBAccountName'), variables('cosmosDBDatabaseName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2020-04-01",
      "name": "[parameters('cosmosDBAccountName')]",
      "location": "[parameters('location')]",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[parameters('location')]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2020-04-01",
      "name": "[format('{0}/{1}', parameters('cosmosDBAccountName'), variables('cosmosDBDatabaseName'))]",
      "properties": {
        "options": {
          "throughput": "[parameters('cosmosDBDatabaseThroughput')]"
        },
        "resource": {
          "id": "[variables('cosmosDBDatabaseName')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDBAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2017-05-01-preview",
      "scope": "[format('Microsoft.DocumentDB/databaseAccounts/{0}', parameters('cosmosDBAccountName'))]",
      "name": "[variables('cosmosDBAccountDiagnosticSettingsName')]",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
        "logs": [
          {
            "category": "DataPlaneRequests",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDBAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2017-05-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}/blobServices/{1}', parameters('storageAccountName'), 'default')]",
      "name": "[variables('storageAccountBlobDiagnosticSettingsName')]",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
        "logs": [
          {
            "category": "StorageRead",
            "enabled": true
          },
          {
            "category": "StorageWrite",
            "enabled": true
          },
          {
            "category": "StorageDelete",
            "enabled": true
          }
        ]
      }
    }
  ]
}